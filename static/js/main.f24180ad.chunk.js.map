{"version":3,"sources":["characters/character.view.js","characters/character.controller.js","App.js","serviceWorker.js","index.js"],"names":["character_view","Box","styled","div","_templateObject","Wrapper","_templateObject2","Description","_templateObject3","Picture","img","_templateObject4","Buttons","_templateObject5","Button","button","_templateObject6","Image","_templateObject7","UsersAPI","axios","create","baseURL","headers","Accept","Content-Type","CharacterList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","users","loading","componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","get","concat","id","sent","data","results","map","user","react_default","createElement","src","image","name","setState","stop","inceaseId","reduceId","onClick","disabled","React","Component","App","character_controller_CharacterList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"khDAEe,IAAAA,EAAA,CACXC,IAAKC,IAAOC,IAATC,KAOHC,QAASH,IAAOC,IAATG,KAQPC,YAAaL,IAAOC,IAATK,KAKXC,QAASP,IAAOQ,IAATC,KAKPC,QAASV,IAAOC,IAATU,KASPC,OAAQZ,IAAOa,OAATC,KAUNC,MAAOf,IAAOQ,IAATQ,cC5CHC,SAAWC,EAAMC,OAAO,CAC1BC,QAAO,mCACPC,QAAS,CACLC,OAAQ,mBACRC,eAAgB,sBAGHC,cACjB,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAIVQ,MAAQ,CACJC,MAAQ,GACRC,SAAS,GAPKT,EAUlBU,kBAVkBT,OAAAU,EAAA,EAAAV,CAAAW,EAAAC,EAAAC,KAUE,SAAAC,IAAA,IAAAC,EAAAR,EAAA,OAAAI,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACO7B,EAAS8B,IAAT,mBAAAC,OAAgCtB,EAAKuB,KAD5C,OACVP,EADUE,EAAAM,KAEZhB,EAAQQ,EAASS,KAAKC,QAAQC,IAAI,SAAAC,GAClC,OACIC,EAAAhB,EAAAiB,cAAC1D,EAAUK,QAAX,KACIoD,EAAAhB,EAAAiB,cAAC1D,EAAUS,QAAX,CAAmBkD,IAAOH,EAAKI,QAC/BH,EAAAhB,EAAAiB,cAAC1D,EAAUO,YAAX,KAAwBiD,EAAKK,SAIzCjC,EAAKkC,SAAS,CACV1B,MAAQA,EACRC,SAAS,IAZG,wBAAAS,EAAAiB,SAAApB,MAVFf,EA0BlBoC,UAAY,WACRpC,EAAKkC,SAAS,CACVzB,SAAQ,IAEZT,EAAKuB,KACDvB,EAAKuB,GAAK,GACdvB,EAAKU,qBAhCSV,EAoClBqC,SAAW,WACPrC,EAAKkC,SAAS,CACVzB,SAAQ,IAEZT,EAAKuB,KACDvB,EAAKuB,IAAM,GACfvB,EAAKU,qBAxCLV,EAAKuB,GAAK,EAFIvB,wEA+Cd,IAAIyB,EAQJ,OANIA,EADAtB,KAAKI,MAAME,QACJoB,EAAAhB,EAAAiB,cAAC1D,EAAUiB,MAAX,CAAiB0C,IAAI,yBAErBF,EAAAhB,EAAAiB,cAAC1D,EAAUC,IAAX,KACF8B,KAAKI,MAAMC,OAIhBqB,EAAAhB,EAAAiB,cAAA,WACKL,EACDI,EAAAhB,EAAAiB,cAAC1D,EAAUY,QAAX,KACI6C,EAAAhB,EAAAiB,cAAC1D,EAAUc,OAAX,CAAkBoD,QAAWnC,KAAKkC,SAAUE,SAAwB,IAAZpC,KAAKoB,IAA7D,QACAM,EAAAhB,EAAAiB,cAAC1D,EAAUc,OAAX,CAAkBoD,QAAWnC,KAAKiC,UAAWG,SAAwB,KAAZpC,KAAKoB,IAA9D,iBA7DuBiB,IAAMC,WCAlCC,EAPH,SAAC3C,GACT,OACI8B,EAAAhB,EAAAiB,cAAA,WACID,EAAAhB,EAAAiB,cAACa,EAAD,QCMQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOrB,EAAAhB,EAAAiB,cAACqB,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f24180ad.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport default {\r\n    Box: styled.div`\r\n    width: auto;\r\n    height: auto;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-around;\r\n    `,\r\n    Wrapper: styled.div`\r\n    width: auto;\r\n    height: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 10px;\r\n    align-items: center;\r\n    `,\r\n    Description: styled.div`\r\n    font-family: Helvetica, sans-serif;\r\n    font-size: 16px;\r\n    font-weight: 300;\r\n    `,\r\n    Picture: styled.img`\r\n    width: 150px;\r\n    height: 100px;\r\n    margin-bottom: 10px;\r\n    `,\r\n    Buttons: styled.div`\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    opacity: 0.8;\r\n    &:hover{\r\n        opacity: 1;\r\n    }\r\n    `,\r\n    Button: styled.button`\r\n    width:70px;\r\n    height: 30px;\r\n    font-family: Helvetica, sans-serif;\r\n    font-size: 16px;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 10%;\r\n    cursor: pointer;\r\n    `,\r\n    Image: styled.img`\r\n    display: block;\r\n    margin: 0 auto;\r\n    width: auto;\r\n    `\r\n\r\n}","import React from 'react';\r\nimport Character from './character.view.js';\r\nimport axios from 'axios';\r\nconst UsersAPI = axios.create({\r\n    baseURL: `https://rickandmortyapi.com/api/`,\r\n    headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'}\r\n})\r\n\r\nexport default class CharacterList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.id = 1;\r\n    }\r\n\r\n    state = {\r\n        users : [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const response = await UsersAPI.get(`character/?page=${this.id}`);\r\n        let users = response.data.results.map(user => {\r\n            return  (\r\n                <Character.Wrapper>\r\n                    <Character.Picture src = {user.image}></Character.Picture>\r\n                    <Character.Description>{user.name}</Character.Description> \r\n                </Character.Wrapper>\r\n                )\r\n        })\r\n        this.setState({\r\n            users : users,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    inceaseId = () => {\r\n        this.setState({\r\n            loading:true\r\n        });\r\n        this.id++;\r\n        if (this.id > 1) {\r\n        this.componentDidMount();\r\n        }\r\n    }\r\n\r\n    reduceId = () => {\r\n        this.setState({\r\n            loading:true\r\n        });\r\n        this.id--;\r\n        if (this.id >= 1) {\r\n        this.componentDidMount();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let data;\r\n        if (this.state.loading){\r\n            data = <Character.Image src=\"./images/loading.gif\"/>\r\n        }else{\r\n            data = <Character.Box>\r\n                {this.state.users}\r\n                </Character.Box>\r\n        }\r\n        return  (\r\n            <div>\r\n                {data}\r\n                <Character.Buttons>\r\n                    <Character.Button onClick = {this.reduceId} disabled = {this.id === 1 }>Prev</Character.Button>\r\n                    <Character.Button onClick = {this.inceaseId} disabled = {this.id === 25}>Next</Character.Button>\r\n                </Character.Buttons>\r\n            </div>\r\n                )\r\n    }\r\n}\r\n\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ","import React from 'react';\nimport CharacterList from './characters/character.controller.js'\n\nconst App = (props) => {\n    return (\n        <div>\n            <CharacterList />\n        </div>\n    )\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}